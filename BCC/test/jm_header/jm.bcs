#if 1

#library "jm"

#include "zcommon.h"
#include "jm.h"
#include "utility.h"
#include "timer.h"
#include "map_message.h"
#include "telepatch.h"
#include "hs.h"
#include "solo_ranker.h"
#include "team_ranker.h"
#include "svmz.h"
#include "who_exited.h"
#include "auto_fist.h"

// ==========================================================================
strict namespace Jm {
// ==========================================================================

enum Mode {
   MODE_COOP,
   MODE_SVMZ,
};

enum MapType gMapType = MAP_SOLO;
private enum Mode gMode = MODE_COOP;
private int gFlags = F_NONE;
private str gPar = "";
private int gPoints = 0;

void InitSolo( str par ) {
   Init( MAP_SOLO, par );
}

void InitTeam( str par, int points ) {
   Init( MAP_TEAM, par );
   gPoints = points;
}

private void Init( enum MapType mapType, str par ) {
   Utility.Init();
   gMapType = mapType;
   gPar = par;
   if ( GetCvar( "survival" ) ) {
      gMode = MODE_SVMZ;
      Hs.Disable();
      if ( mapType == MAP_TEAM ) {
         TeamRanker.PrepareForSvmz();
      }
   }
   else {
      Timer.SetPar( par );
      if ( GetCvar( "sv_disallowsuicide" ) ) {
         ConsoleCommand( "sv_disallowsuicide false" );
      }
   }
}

void EnableFlag( int flag ) {
   gFlags |= flag;
}

void DisableFlags( int flag ) {
   gFlags ^= flag;
}

void Run() {
   if ( gMode == MODE_COOP ) {
      if ( gFlags & F_MANUALTIMER ) {
         Timer.ShowTime( 0 );
      }
      else {
         Timer.Run();
      }
      if ( gMapType == MAP_SOLO ) {
         Acs_NamedExecute( "SoloRanker.Start", 0 );
      }
      else {
         Acs_NamedExecute( "TeamRanker.Start", 0, gPoints );
      }
   }
   else {
      RunSvmz( "map map01" );
   }
}

void RunSvmz( str mapRestartCommand ) {
   if ( Svmz.Init() ) {
      ConsoleCommand( mapRestartCommand );
   }
   if ( gMapType == MAP_TEAM ) {
      // Clear the points table from the previous round if the players failed
      // to complete the map. If not done, the table from the previous round
      // will overlap with the new one.
      TeamRanker.ClearPointsTable();
      Acs_NamedExecute( "TeamRanker.Start", 0, gPoints );
   }
   Acs_NamedExecute( "Svmz.Start", 0, gPar );
}

void StartTimer() {
   if ( gFlags & F_MANUALTIMER ) {
      Timer.Run();
   }
   else {
      PrintBold(
         s: "\cJm.StartTimer() error: timer is not set to manual" );
   }
}

void SetMapMessage( str name, str author, enum MapMsg.Skill skill ) {
   MapMsg.Set( name, author, skill, gPar );
}

void AddPoint() {
   if ( gMapType == MAP_TEAM ) {
      Acs_NamedExecuteAlways( "TeamRanker.AddPoint", 0 );
   }
   else {
      PrintBold( s: "\ciCan't give a point on a non-team map" );
   }
}

void FinishLine() {
   if ( gMode == MODE_COOP ) {
      if ( gMapType == MAP_SOLO ) {
         SoloRanker.Finish();
      }
      else {
         AddPoint();
      }
   }
   else {
      Svmz.MakeEscapee();
      if ( gMapType == MAP_TEAM ) {
         AddPoint();
      }
   }
}

void DisallowHs( int player ) {
   Hs.Disallow( player );
}

void Exit() {
   if ( gMode == MODE_COOP ||
      ( gMode == MODE_SVMZ && Svmz.ValidateExit() ) ) {
      WhoExited.ShowAndExit();
   }
}

bool IsValidExit() {
   if ( gMode == MODE_SVMZ ) {
      return Svmz.ValidateExit();
   }
   else {
      return true;
   }
}

script 931 death {
   if ( gMode == MODE_COOP && ! GetCvar( "jm_disable_telepatch" ) ) {
      // This function changes the activator of the script, so we better have
      // this block of code as the last block of the script.
      Telepatch.OnDeath( PlayerNumber() );
   }
}

script 932 respawn {
   if ( gMode == MODE_COOP ) {
      Telepatch.OnRespawn( PlayerNumber() );
   }
}

script 933 ( int player ) disconnect {
   if ( gMode == MODE_COOP ) {
      Telepatch.OnDisconnect( player );
   }
}

}

#endif