#include "zcommon.h"
#include "bcsutils.bcs"
#include "structs.h"
#include "menu.bcs"
using BCSUtils;
int bullet_inc = 1;
Weapon_T& PrimaryWeapon = Nullweapon;
Weapon_T& SecondaryWeapon = Nullweapon;
Vehicle_T& Vehicle = Nullvehicle;


function int AddToAngle(int angle, int addition)
{
	angle = angle >> 8;
    if(angle+addition > 255){
		return (angle + addition - 256) << 8;
	}else if(angle+addition < 0){
		return (angle + addition + 256) << 8;
	}else{
		return (angle+addition) << 8;
	}
}

function void FireProjectile(xWeapon_T& Weapon, fixed angle, fixed xoffset, fixed yoffset, fixed zoffset){
	fixed velx0, vely0, velz0;
	velx0 = Weapon.speed << 16;
	
	//spread
	vely0 = Weapon.spread << 16;
	vely0 = random(-vely0, vely0);
	velz0 = Weapon.spread << 16;
	fixed velz = random(-velz0, velz0);
	//rotate the vector of x and y along angle angle
	RotateVector(velx0, vely0, angle);
	fixed velx = r1;
	fixed vely = r2;
	
	//spawn the projectile (need to pass x and y coords)
	Spawn(Weapon.round, xoffset, yoffset, zoffset, bullet, bullet_inc);
	//set the velocity to the rotated vector
	SetActorVelocity(bullet_inc, velx >> 16, vely >> 16, velz >> 16);
	bullet_inc++;
	if(bullet_inc==10){
		bullet_inc = 1;
	}
}

SCRIPT "main" (void) ENTER
{
	Weapon_T& MyPrimary = Nullweapon;
	Weapon_T& MySecondary = Nullweapon;
	int PlayerX = GetActorX(0);
	int PlayerY = GetActorY(0);
	int PlayerZ = GetActorZ(0);
	int MuzzleHeight = PlayerZ + (36 << 16);
	
	int Muzzle1X, Muzzle2X, Muzzle2Y, Muzzle2Y, PureAngle;
	
	Thing_ChangeTID(0, 100+PlayerNumber());
	PrimaryWeapon = Bonesaw;
	SecondaryWeapon = Carlos;
	
	SetInventory("AutoGun", 1000);
	SetInventory(SecondaryWeapon.ammotype, SecondaryWeapon.maxammo);
	
	Spawn("Muzzle",
	PlayerX, PlayerY, MuzzleHeight, 
	200+PlayerNumber());
	
	Spawn("Muzzle",
	PlayerX, PlayerY, MuzzleHeight,
	400+PlayerNumber());
	
	
	SetFont("BIGFONT");
	while (true) {
		PureAngle = FixedDiv(FixedMul(GetActorAngle(0), 360<<8), 256<<8);
		Muzzle1X = GetActorX(0) + FixedMul(30 << 16, Cos(AddToAngle(GetActorAngle(0), Vehicle.muzzleangle)));
		Muzzle1Y = GetActorY(0) + FixedMul(30 << 16, Sin(AddToAngle(GetActorAngle(0), Vehicle.muzzleangle)));
		Muzzle2X = GetActorX(0) + FixedMul(25 << 16, Cos(AddToAngle(GetActorAngle(0), -Vehicle.muzzleangle)));
		Muzzle2Y = GetActorY(0) + FixedMul(25 << 16, Sin(AddToAngle(GetActorAngle(0), -Vehicle.muzzleangle)));

		SetActorPosition(200+PlayerNumber(), Muzzle1X, Muzzle1Y, GetActorZ(0) + (Vehicle.muzzleheight << 16), 0);
		SetActorPosition(400+PlayerNumber(), Muzzle2X, Muzzle2Y, GetActorZ(0) + (Vehicle.muzzleheight << 16), 0);
	delay(1); }
}




SCRIPT "PlayerWeaponController" (void) ENTER {
	while (true) {
		int btn = GetPlayerInput(-1, INPUT_BUTTONS);		
		if(btn == (BT_ATTACK|BT_ALTATTACK)){
			ACS_NamedExecute("PrimaryFire",0);
			ACS_NamedExecute("SecondaryFire",0);
		}else if(btn & BT_ALTATTACK){
			ACS_NamedExecute("SecondaryFire",0);
		}else if(btn & BT_ATTACK){
			ACS_NamedExecute("PrimaryFire",0);			
		}
		
	delay(1);}
}
SCRIPT "PlayerLaserSight" (void) ENTER{
	while(true) {
		int fireangle = GetActorAngle(0) >> 8;
		int vspeed = -sin(GetActorPitch(0)) * 128 >> 16;
		SpawnProjectile(400+PlayerNumber(), "LaserDotTracer", fireangle, 300, vspeed, 0, 0);
		SpawnProjectile(200+PlayerNumber(), "LaserDotTracer", fireangle, 300, vspeed, 0, 0);
	delay(6);}
}

SCRIPT "PrimaryFire" (void) {

	FireProjectile(xBonesaw, GetActorAngle(0), GetActorX(0), GetActorY(0), GetActorZ(0));
	
	
	TakeInventory(PrimaryWeapon.AmmoType, 1);
	Delay(PrimaryWeapon.reload);
	
}

SCRIPT "SecondaryFire" (void) {
	
	int fireangle = GetActorAngle(0) >> 8;
	int vspeed = -sin(GetActorPitch(0)) * 128 >> 16;
	SpawnProjectile(400+PlayerNumber(), 
	SecondaryWeapon.round, fireangle + random(-SecondaryWeapon.spread,SecondaryWeapon.spread), SecondaryWeapon.speed, vspeed + random(-SecondaryWeapon.spread,SecondaryWeapon.spread) , 1, 0);
	
	
	TakeInventory(SecondaryWeapon.AmmoType, 1);
	Delay(SecondaryWeapon.reload);
}